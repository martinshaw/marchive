{"version":3,"file":"performCaptureRun.js","sourceRoot":"","sources":["../../src/performCaptureRun.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nAll Rights Reserved, (c) 2023 CodeAtlas LTD.\n\nAuthor: Martin Shaw (developer@martinshaw.co)\nFile Name: performCaptureRun.ts\nCreated:  2023-10-11T03:58:35.385Z\nModified: 2023-10-11T03:58:35.385Z\n\nDescription: description\n*/\n\nimport fs from \"node:fs\";\nimport logger from \"logger\";\nimport path from \"node:path\";\nimport { v4 as uuidV4 } from \"uuid\";\nimport {\n  ScheduleAttributes,\n  ScheduleStatus,\n} from \"database/src/models/Schedule\";\nimport { Capture, Schedule, Source } from \"database\";\nimport { getDataProviderByIdentifier } from \"data-providers\";\nimport { safeSanitizeFileName, userDownloadsCapturesPath } from \"utilities\";\n\nconst performCaptureRun = async (schedule: Schedule): Promise<void> => {\n  logger.info(\"Found Schedule with ID: \" + schedule.id);\n\n  schedule = await schedule.update({ status: \"processing\" as ScheduleStatus });\n\n  if (schedule.source == null) {\n    await cleanup(schedule);\n    logger.error(\"No Source found for Schedule\");\n    return;\n  }\n\n  const sourceDataProviderIdentifier = schedule?.source?.dataProviderIdentifier;\n  if (sourceDataProviderIdentifier == null) {\n    await cleanup(schedule);\n    logger.error(\"No Data Provider Identifier found for Source\");\n    return;\n  }\n\n  const dataProvider = await getDataProviderByIdentifier(\n    sourceDataProviderIdentifier\n  );\n  if (dataProvider == null) {\n    await cleanup(schedule);\n    logger.error(\"No Data Provider found for Source\");\n    return;\n  }\n\n  logger.info(\n    \"Found Data Provider: \" +\n      dataProvider.getIdentifier() +\n      \" - \" +\n      dataProvider.getName()\n  );\n\n  let logCurrentCursorUrlExplanation = \" for the first time\";\n  if (\n    schedule?.source?.useStartOrEndCursor === \"start\" &&\n    schedule?.source?.currentStartCursorUrl != null\n  )\n    logCurrentCursorUrlExplanation = ` until Start Cursor URL: ${schedule.source.currentStartCursorUrl}`;\n  if (\n    schedule?.source?.useStartOrEndCursor === \"end\" &&\n    schedule?.source?.currentEndCursorUrl != null\n  )\n    logCurrentCursorUrlExplanation = ` from End Cursor URL: ${schedule.source.currentEndCursorUrl}`;\n\n  logger.info(\n    `Attempting to capture URL: ${schedule?.source?.url} - ${logCurrentCursorUrlExplanation}`\n  );\n\n  if (ensureDownloadsDirectoryExists() === false) {\n    await cleanup(schedule);\n    logger.error(\"The downloads directory cannot be created\");\n    return;\n  }\n\n  if (ensureScheduleDownloadLocationExists(schedule) === false) {\n    await cleanup(schedule);\n    logger.error(\n      \"The Schedule's chosen download destination cannot be created\"\n    );\n    return;\n  }\n\n  const captureDownloadDirectory = generateCaptureDownloadDirectory(schedule);\n  if (captureDownloadDirectory === false) {\n    await cleanup(schedule);\n    logger.error(\"A download directory could not be created for the capture\");\n    return;\n  }\n\n  let capture: Capture | null = null;\n  try {\n    capture = await Capture.create({\n      downloadLocation: captureDownloadDirectory,\n      scheduleId: schedule.id,\n    });\n  } catch (error) {\n    await cleanup(schedule);\n    logger.error(\"A DB error occurred when creating a new Capture\");\n    logger.error(error);\n    return;\n  }\n\n  if (capture == null) {\n    await cleanup(schedule);\n    logger.error(\"A new Capture could not be created\");\n    return;\n  }\n\n  capture = await capture.reload({\n    include: [\n      {\n        model: Schedule,\n        include: [Source],\n      },\n    ],\n  });\n\n  logger.info(`Created new Capture with ID ${capture.id}`);\n\n  if (capture.schedule == null) {\n    await cleanup(schedule);\n    logger.error(\"No associated Schedule found for Capture\");\n    return;\n  }\n\n  if (capture.schedule.source == null) {\n    await cleanup(schedule);\n    logger.error(\"No associated Source found for Capture's Schedule\");\n    return;\n  }\n\n  try {\n    await dataProvider.performCapture(\n      capture,\n      capture.schedule,\n      capture.schedule.source\n    );\n  } catch (error) {\n    await cleanup(schedule);\n    logger.error(\"Failed to perform the latest Capture\");\n    logger.error(error);\n    return;\n  }\n\n  await cleanup(schedule);\n  logger.info(\"Capture ID \" + capture.id + \" ran successfully\");\n};\n\nconst ensureDownloadsDirectoryExists = (): boolean => {\n  if (fs.existsSync(userDownloadsCapturesPath) === false) {\n    fs.mkdirSync(userDownloadsCapturesPath, { recursive: true });\n  }\n\n  return fs.lstatSync(userDownloadsCapturesPath).isDirectory();\n};\n\nconst ensureScheduleDownloadLocationExists = (schedule: Schedule): boolean => {\n  if (fs.existsSync(schedule.downloadLocation) === false) {\n    fs.mkdirSync(schedule.downloadLocation, { recursive: true });\n  }\n\n  return fs.lstatSync(schedule.downloadLocation).isDirectory();\n};\n\nconst generateCaptureDownloadDirectory = (\n  schedule: Schedule\n): string | false => {\n  const attemptedDirectory = path.join(\n    schedule.downloadLocation,\n    safeSanitizeFileName(new Date().toISOString().replace(/:/g, \"-\")) ||\n      uuidV4()\n  );\n\n  if (fs.existsSync(attemptedDirectory) === false) {\n    fs.mkdirSync(attemptedDirectory, { recursive: true });\n  }\n\n  return fs.lstatSync(attemptedDirectory).isDirectory()\n    ? attemptedDirectory\n    : false;\n};\n\nconst cleanup = async (\n  schedule: Schedule | null | undefined\n): Promise<boolean> => {\n  if (schedule == null) return true;\n\n  const changes: Partial<ScheduleAttributes> = {\n    status: \"pending\" as ScheduleStatus,\n    lastRunAt: schedule.nextRunAt,\n  };\n\n  if (\n    schedule.interval != null &&\n    Number.isNaN(Number(schedule.interval)) === false &&\n    Number(schedule.interval) > 0\n  ) {\n    const nextRunAt = new Date(new Date().getTime() + schedule.interval * 1000);\n    changes.nextRunAt = nextRunAt;\n  }\n\n  if (schedule.interval == null) changes.nextRunAt = null;\n\n  return (await schedule.update(changes)) != null;\n};\n\nexport default performCaptureRun;\n"]}